{
  "openapi": "3.0.4",
  "info": {
    "title": "WorkflowService",
    "version": "1.0"
  },
  "paths": {
    "/api/Workflows": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}/activate": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}/deactivate": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}/clone": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneWorkflowRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneWorkflowRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloneWorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}/execute": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteWorkflowRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteWorkflowRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteWorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/{workflowId}/executions": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/executions/{executionId}": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/executions/{executionId}/cancel": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/executions/{executionId}/retry": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/statistics": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/designer/step-types": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/designer/validate": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/templates": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publicOnly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Workflows/templates/{templateId}/create-workflow": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFromTemplateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFromTemplateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFromTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CloneWorkflowRequest": {
        "type": "object",
        "properties": {
          "newName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFromTemplateRequest": {
        "type": "object",
        "properties": {
          "workflowName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateWorkflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "definition": {
            "$ref": "#/components/schemas/WorkflowDefinition"
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowTrigger"
          },
          "settings": {
            "$ref": "#/components/schemas/WorkflowSettings"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecuteWorkflowRequest": {
        "type": "object",
        "properties": {
          "inputData": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "triggerSource": {
            "type": "string",
            "nullable": true
          },
          "waitForCompletion": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "INotification": {
        "type": "object",
        "additionalProperties": false
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/INotification"
            },
            "nullable": true,
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "definition": {
            "$ref": "#/components/schemas/WorkflowDefinition"
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowTrigger"
          },
          "settings": {
            "$ref": "#/components/schemas/WorkflowSettings"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executionCount": {
            "type": "integer",
            "format": "int32"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowConnection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "sourceStepId": {
            "type": "string",
            "nullable": true
          },
          "sourcePort": {
            "type": "string",
            "nullable": true
          },
          "targetStepId": {
            "type": "string",
            "nullable": true
          },
          "targetPort": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "$ref": "#/components/schemas/WorkflowConnectionCondition"
          }
        },
        "additionalProperties": false
      },
      "WorkflowConnectionCondition": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStep"
            },
            "nullable": true
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowConnection"
            },
            "nullable": true
          },
          "layout": {
            "$ref": "#/components/schemas/WorkflowLayout"
          }
        },
        "additionalProperties": false
      },
      "WorkflowErrorHandling": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "WorkflowLayout": {
        "type": "object",
        "properties": {
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "zoom": {
            "type": "number",
            "format": "double"
          },
          "viewportPosition": {
            "$ref": "#/components/schemas/WorkflowStepPosition"
          }
        },
        "additionalProperties": false
      },
      "WorkflowSettings": {
        "type": "object",
        "properties": {
          "maxRetries": {
            "type": "integer",
            "format": "int32"
          },
          "timeout": {
            "type": "string",
            "format": "date-span"
          },
          "enableLogging": {
            "type": "boolean"
          },
          "enableNotifications": {
            "type": "boolean"
          },
          "errorHandling": {
            "$ref": "#/components/schemas/WorkflowErrorHandling"
          },
          "customSettings": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "WorkflowStep": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/WorkflowStepType"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "position": {
            "$ref": "#/components/schemas/WorkflowStepPosition"
          },
          "inputPorts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "outputPorts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isStartStep": {
            "type": "boolean"
          },
          "isEndStep": {
            "type": "boolean"
          },
          "condition": {
            "$ref": "#/components/schemas/WorkflowStepCondition"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStepCondition": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStepPosition": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStepType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "format": "int32"
      },
      "WorkflowTrigger": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WorkflowTriggerType"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkflowTriggerType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter 'Bearer' [space] and then your valid token in the text input below.\nExample: \"Bearer eyJhbGciOiJIUzI1NiIs...\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}